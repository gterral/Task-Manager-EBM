<?php

namespace Core\UserBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CreatorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    public function findOneByInstagramPseudo($pseudo)
    {
        return $this->createQueryBuilder('a')
            ->join('a.instagram','i')
            ->where('i.pseudo = :pseudo')
            ->setParameter('pseudo', $pseudo)
            ->getQuery()
            ->getOneOrNullResult();
    }

    ///////////////////////////
    // Query builder simples //
    ///////////////////////////

    public function getCount() {
        return $this->createQueryBuilder('a')
            ->select('COUNT(a)')
            ->andWhere('a.enabled = :isEnabled')
            ->setParameter('isEnabled', 1)
            ->getQuery()
            ->getSingleScalarResult();

    }

    public function getFieldCountForValue($field,$value='none') {
        return $this->createQueryBuilder('a')
            ->select('COUNT(a)')
            ->where('a.'.$field.' = :value')
            ->setParameter("value", $value)
            ->andWhere('a.enabled = :isEnabled')
            ->setParameter('isEnabled', 1)
            ->getQuery()
            ->getSingleScalarResult();

    }

    public function getFieldCountLikeValue($field,$value='none') {
        return $this->createQueryBuilder('a')
            ->select('COUNT(a)')
            ->where('a.'.$field.' LIKE :value')
            ->setParameter('value', '%"'.$value.'"%')
            ->andWhere('a.enabled = :isEnabled')
            ->setParameter('isEnabled', 1)
            ->getQuery()
            ->getSingleScalarResult();

    }

    public function findByRole($role)
    {
        return $this->createQueryBuilder('a')
            ->where('a.roles LIKE :value')
            ->setParameter('value', '%"' . $role . '"%')
            ->getQuery()
            ->getResult();
    }
}
